{"componentChunkName":"component---src-templates-post-jsx","path":"/Typescript로 초기세팅하기/","result":{"data":{"site":{"siteMetadata":{"title":"Pang's Blog"}},"markdownRemark":{"id":"6f1fdf6a-2274-5c5c-af76-5d322c7eb320","excerpt":"1. Typescript로 세팅하기 1-1. Create React App(CRA)  으로 원하는 폴더에 typescript로 프로젝트를 할 기반 설정 및 설치를 한다.\nCRA로 설치 시 장점은 babel이나 webpack등을 기본적으로 설정해준다는 것이다.\n터미널은 윈도우기준 를 사용한다. 그러나 CRA는 Webpack 설정을 숨겨놓고 있기때문에, 수정…","html":"<h2>1. Typescript로 세팅하기</h2>\n<h3>1-1. Create React App(CRA)</h3>\n<blockquote>\n<p><code class=\"language-text\">npx create-react-app 프로젝트명 --template typescript</code></p>\n</blockquote>\n<p>으로 원하는 폴더에 typescript로 프로젝트를 할 기반 설정 및 설치를 한다.\nCRA로 설치 시 장점은 babel이나 webpack등을 기본적으로 설정해준다는 것이다.\n터미널은 윈도우기준 <code class=\"language-text\">git bash</code>를 사용한다.</p>\n<ul>\n<li>그러나 CRA는 Webpack 설정을 숨겨놓고 있기때문에, 수정하기 힘들다는 단점이 있다.</li>\n</ul>\n<h2>2. TailwindCSS 설치하기</h2>\n<ul>\n<li>이번 프로젝트는 CSS 프레임워크를 TailwindCSS로 정하여 세팅을 해주기로 했다. 왜냐면 일단 너무 간편하기도하고 평소에 주로 사용해봤기때문에...</li>\n</ul>\n<blockquote>\n<p><code class=\"language-text\">npm i -D tailwindcss postcss autoprefixer</code></p>\n</blockquote>\n<h3>2-1 tailwind.config.js 만들기</h3>\n<blockquote>\n<p><code class=\"language-text\">npx tailwindcss init</code>명령어를 사용하여 tailwind.config.js 파일을 생성한다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/**/*.{js,jsx,ts,tsx}\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">extend</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>content안에 위와 같이 설정해준다(src폴더 사용경우)</p>\n<h3>2-2 TailwindCSS 적용</h3>\n<p>src/index.css 상단에</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> base<span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> components<span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> utilities<span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>를 추가해준다.</p>\n<h2>3. Redux 설치</h2>\n<blockquote>\n<p><code class=\"language-text\">npm i redux react-redux</code></p>\n<p><code class=\"language-text\">npm i --dev @types/react-redux</code></p>\n<p><code class=\"language-text\">npm i @reduxjs/toolkit</code></p>\n</blockquote>\n<p>상태관리를 위해 Redux를 설치한다. 기본적인 구조는 <a href=\"https://bum-developer.tistory.com/entry/React-Redux%EC%99%80-TypeScript-%ED%95%A8%EA%BB%98-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">참고블로그</a>를 참고하여 구성하였다. 리덕스에 대한 설명은 다음번에 추가적으로 하도록 하겠다.</p>\n<h2>4. Loadable 설치</h2>\n<blockquote>\n<p><code class=\"language-text\">npm i @loadable/component</code></p>\n<p><code class=\"language-text\">npm i --save-dev @types/loadable/component</code></p>\n</blockquote>\n<p>코드 스플리팅을 위해 설치한다. SPA의 단점인 초기 데이터 요청 시간이 길어짐을 보완할 수 있다.</p>\n<h2>5. React-Router-DOM 설치하기</h2>\n<blockquote>\n<p><code class=\"language-text\">npm i react-router-dom</code></p>\n<p><code class=\"language-text\">npm i react-router-dom @types/react-router-dom</code></p>\n<p><code class=\"language-text\">npm i --save @types/react @types/react-dom</code></p>\n</blockquote>\n<h3>5-1. 라우터 구성</h3>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>App<span class=\"token punctuation\">.</span>tsx\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> loadable <span class=\"token keyword\">from</span> <span class=\"token string\">\"@loadable/component\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Route<span class=\"token punctuation\">,</span> Routes <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Home <span class=\"token operator\">=</span> <span class=\"token function\">loadable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./pages/Home/index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> LogIn <span class=\"token operator\">=</span> <span class=\"token function\">loadable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./pages/LogIn/index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> SignUp <span class=\"token operator\">=</span> <span class=\"token function\">loadable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./pages/SignUp/index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Product <span class=\"token operator\">=</span> <span class=\"token function\">loadable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./pages/Product/index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Routes<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>LogIn <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/signup\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>SignUp <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/product/:id\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Product <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Routes<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<p>loadable로 코드 스플리팅을 해주고 우선 필요할 것 같은 라우팅만 설정해준다.</p>\n<h2>6. tsconfig paths를 절대경로로 설정하기</h2>\n<p>원래는 tsconfig.json을</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">./tsconfig.json\n\n<span class=\"token property\">\"baseUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./src\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"paths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"@hooks/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./hooks/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@components/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./components/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@pages/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./pages/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@utils/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./utils/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@store/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./store/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@reducer/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./reducer/*\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>와 같이 수정하면 절대경로로 설정할 수 있다. 그러나 CRA로 구축했을때는 tsconfig.json에서 path를 인식하지 못하는 문제가 발생한다. CRA 내부의 Webpack 설정 때문에 tsconfig를 변경한 내용이 적용되지 않고 초기에 생성된 tsconfig 설정으로 돌아가기 때문이라고 한다.</p>\n<blockquote>\n<p><code class=\"language-text\">npm i @craco/craco</code></p>\n<p><code class=\"language-text\">npm i -D craco-alias</code></p>\n<p><code class=\"language-text\">npm i --save-dev react-app-alias</code>\n를 설치한 후 <code class=\"language-text\">루트 디렉토리</code>에 craco.config.js를 만든 후</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>craco<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>js\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> CracoAliasPlugin <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-app-alias'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">plugin</span><span class=\"token operator\">:</span> CracoAliasPlugin<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">source</span><span class=\"token operator\">:</span> <span class=\"token string\">'tsconfig'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">baseUrl</span><span class=\"token operator\">:</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">tsConfigPath</span><span class=\"token operator\">:</span> <span class=\"token string\">'./tsconfig.paths.json'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>와 같이 설정한다.<br/>\n그 후 덮어쓸 내용만 담은 tsconfig를 <code class=\"language-text\">tsconfig.paths.json</code>으로 따로 생성한 후</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">./tsconfig.paths.json\n\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"baseUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./src\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"paths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"@components/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./components/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@hooks/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./hooks/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@pages/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./pages/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@reducer/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./reducer/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@store/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./store/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>와 같이 작성한다.<br/>\n(<code class=\"language-text\">tsconfig.paths.json</code>에 주석을 달면 에러가 발생한다.)<br/>\n<code class=\"language-text\">tsconfig</code>에는 extends 속성을</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">./tsconfig.json\n\n<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./tsconfig.paths.json\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>와 같이 추가한 후 <code class=\"language-text\">package.json</code>에서 <code class=\"language-text\">react-scripts</code>명령어를 craco로 변경한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">./package.json\n\n<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"craco start\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"craco build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"craco test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eject\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react-scripts eject\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2>다음</h2>\n<p>상품의 결제페이지를 만드는 방법을 정리하도록 하겠다.</p>","frontmatter":{"title":"TypeScript로 진경옥몰 초기 세팅하기","date":"June 27, 2023","update":"June 27, 2023","tags":["ReactJS","TypeScript","Setting","Blog","진경옥몰"],"series":"TypeScript"},"fields":{"slug":"/Typescript로 초기세팅하기/","readingTime":{"minutes":4.445}}},"seriesList":{"edges":[{"node":{"id":"51ac987e-4d37-5389-9b14-8d38dd16b5e9","fields":{"slug":"/Typescript로 프로젝트 세팅하기/"},"frontmatter":{"title":"TypeScript로 프로젝트 세팅하기"}}},{"node":{"id":"6f1fdf6a-2274-5c5c-af76-5d322c7eb320","fields":{"slug":"/Typescript로 초기세팅하기/"},"frontmatter":{"title":"TypeScript로 진경옥몰 초기 세팅하기"}}}]},"previous":{"fields":{"slug":"/CRA로 Typescript 세팅하기/"},"frontmatter":{"title":"TypeScript + TailwindCSS로 프로젝트 시작하기"}},"next":{"fields":{"slug":"/PortOne사용하기/"},"frontmatter":{"title":"Typescript & React PortOne으로 결제 테스트하기"}}},"pageContext":{"id":"6f1fdf6a-2274-5c5c-af76-5d322c7eb320","series":"TypeScript","previousPostId":"5750f348-7689-5d45-8c43-6a5aa6406f59","nextPostId":"6742a0c1-d3cc-54ec-8ee3-e3910a8531f3"}},"staticQueryHashes":[]}